
# path p1 1:25 pass
# path p2 pass 51:60
# Read from file produced by testSelectEventsHLT.cfg
# Write all events to the output to be fed into
# into testSelectEventsTEST.cfg.
# The last .cfg file is where the test is really made.

process PROD  = {

  service = MessageLogger
  {
    untracked vstring destinations = { "cerr", "cout" }
    untracked PSet cerr = { untracked string threshold = "WARNING" }
    untracked PSet cout = { untracked string threshold = "WARNING" }
  }

  untracked  PSet options = {
    untracked bool wantSummary=true 
    include "FWCore/Framework/test/cmsExceptionsFatalOption.cff"
  }

  source = NewEventStreamFileReader
  {
    untracked vstring fileNames = {
      "file:testSelectEventsHLT.dat"
    }
    int32 max_event_size = 7000000
    int32 max_queue_depth = 5
  }  

  #source = PoolSource {
  #  untracked vstring fileNames = {"file:testSelectEventsHLT.root"}
  #}

  module f1 = TestFilterModule {
    untracked bool onlyOne = false
    untracked int32 acceptValue = 25
  }

  module f2a = TestFilterModule {
    untracked bool onlyOne = false
    untracked int32 acceptValue = 50
  }

  module f2b = TestFilterModule {
    untracked bool onlyOne = false
    untracked int32 acceptValue = 10
  }

  module a = TestTriggerNames {
    untracked vstring trigPaths = { "p1", "p2" }
    untracked vstring trigPathsPrevious = { "p01", "p02", "p03", "p04" }
    untracked bool streamerSource = true
    untracked bool dumpPSetRegistry = false
  }

  path p1 = { a, f1 }

  path p2 = { !f2a, f2b }

  module out = PoolOutputModule {
    untracked string fileName = "testSelectEventsPROD.root"
  }

  endpath e = { out }
}
