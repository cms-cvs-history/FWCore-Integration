
# path p01 pass 1:98
# path p02 21:30 pass
# path p03 71 only passes
# path p04 all fail
# Write all events to the output to be fed into
# testSelectEventsPROD.cfg, then into testSelectEventsTEST.cfg
# The last .cfg file is where the test is really made.

process HLT = {
  untracked PSet maxEvents = {untracked int32 input = 99}
  service = MessageLogger {
    untracked vstring destinations = { "cerr", "cout" }
    untracked PSet cerr = { untracked string threshold = "WARNING" }
    untracked PSet cout = { untracked string threshold = "WARNING" }
  }

  untracked  PSet options = {
    untracked bool wantSummary=true 
    include "FWCore/Framework/test/cmsExceptionsFatalOption.cff"
  }

  source = EmptySource { }

  module f1 = TestFilterModule {
    untracked bool onlyOne = false
    untracked int32 acceptValue = 98
  }

  module f2a = TestFilterModule {
    untracked bool onlyOne = false
    untracked int32 acceptValue = 20
  }

  module f2b = TestFilterModule {
    untracked bool onlyOne = false
    untracked int32 acceptValue = 10
  }

  module f3 = TestFilterModule {
    untracked bool onlyOne = true
    untracked int32 acceptValue = 71
  }

  module f4 = TestFilterModule {
    untracked bool onlyOne = true
    untracked int32 acceptValue = 101
  }

  module a = TestTriggerNames {
    untracked vstring trigPaths = { "p01", "p02", "p03", "p04" }
    untracked vstring endPaths = { "e" }
    untracked bool dumpPSetRegistry = false
  }

  path p01 = { f1 }
  path p02 = { !f2a, f2b }
  path p03 = { f3 }
  path p04 = { a, f4 }

  module out = EventStreamFileWriter
  {
    int32 max_event_size = 7000000
    int32 max_queue_depth = 5
    bool use_compression = true
    int32 compression_level = 1

    string fileName = "testSelectEventsHLT.dat"
    string indexFileName = "testSelectEventHLT.ind"
  }

  #module out = PoolOutputModule {
  #  untracked string fileName = "testSelectEventsHLT.root"
  #}

  endpath e = { out }
}
