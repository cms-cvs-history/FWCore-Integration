

process PROD = {

  untracked PSet maxEvents = {untracked int32 input = 10}

  include "FWCore/MessageService/data/MessageLogger.cfi"
  replace MessageLogger.cerr.FwkReport.reportEvery = 1000
  replace MessageLogger.cerr.INFO.limit = 1000

  untracked  PSet options = {
    include "FWCore/Framework/test/cmsExceptionsFatalOption.cff"
  }

  source = EmptySource {
    untracked uint32 firstRun = 1
    untracked uint32 firstLuminosityBlock = 1
    untracked uint32 numberEventsInLuminosityBlock = 100
    untracked uint32 numberEventsInRun = 100
    untracked uint32 firstEvent = 1
  }

  module thingWithMergeProducer = ThingWithMergeProducer { }

  module test = TestMergeResults {

#   These values below are just arbitrary and meaningless
#   We are checking to see that what we get out matches what
#   was put in.

#   expected values listed below come in sets of three
#      value expected in Thing
#      value expected in ThingWithMerge
#      value expected in ThingWithIsEqual
#   This set of 3 is repeated for each subsequent call to the function (eg beginRun)
#   The Prod suffix refers to objects from the process named PROD
#   The New suffix refers to objects created in the most recent process
#   When the sequence of parameter values is exhausted it stops checking

    untracked vint32 expectedBeginRunProd = { 10001, 10002, 10003 }
    untracked vint32 expectedEndRunProd = { 100001, 100002, 100003 }
    untracked vint32 expectedBeginLumiProd = { 101, 102, 103 }
    untracked vint32 expectedEndLumiProd = { 1001, 1002, 1003 }

    untracked vint32 expectedBeginRunNew = { }
    untracked vint32 expectedEndRunNew = { }
    untracked vint32 expectedBeginLumiNew = { }
    untracked vint32 expectedEndLumiNew = { }

    untracked bool verbose = false
  }

  path p1 = { thingWithMergeProducer & test }

  module out = PoolOutputModule {
    untracked string fileName = "testRunMerge1.root"
  }

  endpath e = { out }
}
